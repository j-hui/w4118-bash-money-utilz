alias emu="emulator @w4118avd -kernel $(git rev-parse --show-toplevel)/build-emu/kernel/arch/arm64/boot/Image -show-kernel"
alias armmake="make::build"
alias makekernel="make::build"
alias make::img="$(git rev-parse --show-toplevel)/tools/make_bootimg"

function git::master()
{(
	cd "$(git rev-parse --show-toplevel)/kernel"
	git checkout master
	git submodule update
	./make_kernel msm_defconfig
)}

function git::emu()
{(
	cd "$(git rev-parse --show-toplevel)/kernel"
	git checkout emu
	git submodule update
	./make_kernel ranchu_defconfig
)}

function make::build()
{(
	cd "$(git rev-parse --show-toplevel)/kernel"

	branch="$(git rev-parse --abbrev-ref HEAD)"
	if [[ "${branch}" == "master" ]]
	then
		echo "********* MASTER CONFIGURATION *********"
		./make_kernel msm_defconfig
	elif [[ "${branch}" == "emu" ]]
	then
		echo "********* EMU CONFIGURATION *********"
		./make_kernel ranchu_defconfig
	else
		echo "armmake error: not on master or emu branch"
		# TODO: add in functionality to prompt for branch to build on
		return
	fi
	./make_kernel -j10 "$@"
)}

function style::check()
{
	if [[ ${USER} == "w4118" ]]
	then
		~/utils/bin/checkpatch.pl --no-tree -f "$@"
	else
		perl <(curl -s https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl) --no-tree -f "$@"
	fi
}

function style::strip()
{
	sed --in-place 's/[[:space:]]\+$//' $1
}

function style::tab8()
{
	sed 's/        /\t/g' $1
}

function style::tab4()
{
	sed 's/    /\t/g' $1
}

function style::tab()
{
	style::tab8 $1
}
