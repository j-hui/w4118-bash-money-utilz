alias git::root="git rev-parse --show-toplevel"

alias armmake="make::build"
alias makekernel="make::build"
alias emu="test::emu"

function git::is_w4118()
{
	git remote -v | grep -q "W4118/hmwk"
	return ${?}
}

function git::master()
{(
	if ! git::is_w4118; then
		echo "error: not in w4118 git repo"
		return 1
	fi

	cd "$(git::root)/kernel"
	git checkout master
	git submodule update
	./make_kernel msm_defconfig
)}

function git::emu()
{(
	if ! git::is_w4118; then
		echo "error: not in w4118 git repo"
		return 1
	fi

	cd "$(git::root)/kernel"
	git checkout emu
	git submodule update
	./make_kernel ranchu_defconfig
)}

function make::img()
{
	"$(git::root)/tools/make_bootimg"
}

function make::ranchu()
{(
	if ! git::is_w4118; then
		echo "error: not in w4118 git repo"
		return 1
	fi

	cd "$(git::root)/kernel"

	echo "********* EMU CONFIGURATION *********"
	./make_kernel ranchu_defconfig
)}

function make::msm()
{(
	if ! git::is_w4118; then
		echo "error: not in w4118 git repo"
		return 1
	fi

	cd "$(git::root)/kernel"

	echo "********* MASTER CONFIGURATION *********"
	./make_kernel msm_defconfig
)}

function make::prompt()
{
	echo -n "please specific the config you would like to compile with [master/emu]: "
	read branch
	case "${branch}" in
		master|m)	make::msm "$@" || return ${?} ;;
		emu|e)		make::ranchu "$@" || return ${?} ;;
		*)		echo "armmake error: neither master nor emu specified. bailing."
				return 1 ;;
	esac
}

function make::build()
{(
	if ! git::is_w4118; then
		echo "error: not in w4118 git repo"
		return 1
	fi

	cd "$(git::root)/kernel"

	local branch="${1:-$(git rev-parse --abbrev-ref HEAD)}"
	shift 
	case "${branch}" in
		master|m)	make::msm "$@" || return ${?} ;;
		emu|e)		make::ranchu "$@" || return ${?} ;;
		*)		make::prompt "$@" || return ${?} ;;
	esac
	

	./make_kernel -j10 "$@" && make::img
)}

function test::emu()
{
	local branch="${1:-$(git rev-parse --abbrev-ref HEAD)}"
	emulator @w4118avd -kernel $(git::root)/build-${branch}/kernel/arch/arm64/boot/Image -show-kernel
}

function style::check()
{
	if [[ ${USER} == "w4118" ]]
	then
		~/utils/bin/checkpatch.pl --no-tree -f "$@"
	else
		perl <(curl -s https://raw.githubusercontent.com/torvalds/linux/master/scripts/checkpatch.pl) --no-tree -f "$@"
	fi
}

function setup::checkout()
{
	local hook_path="$(git::root)/.git/hooks"
	curl https://raw.githubusercontent.com/W4118/common/master/post-checkout > ${hook_path}/post-checkout
	chmod +x "${hook_path}/post-checkout"
}

function style::strip()
{
	sed --in-place 's/[[:space:]]\+$//' $1
}

function style::tab8()
{
	sed 's/        /\t/g' $1
}

function style::tab4()
{
	sed 's/    /\t/g' $1
}

function style::tab()
{
	style::tab8 $1
}
